{"version":3,"sources":["component/Login/login.js","component/User/index.js","component/Header/index.js","component/Home/index.js","App.js","reportWebVitals.js","index.js"],"names":["Login","useState","username","setUsername","password","setPassword","error","setError","navigate","useNavigate","useEffect","getAccessToken","localStorage","getItem","length","className","value","onChange","e","event","target","handleUsernameChange","type","handlePasswordChange","onClick","toLowerCase","accessToken","Math","floor","random","setItem","handleSubmit","User","props","data","src","picture","large","alt","name","first","last","Header","removeItem","Home","setuserData","loading","setLoading","pagenumber","setPagenumber","observer","useRef","lastUserRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","cancel","setTimeout","axios","method","url","cancelToken","CancelToken","c","then","res","currentdata","results","catch","isCancel","map","elm","index","ref","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ad9ca58.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../../styles/style.css\";\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = () => {\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const getAccessToken = localStorage.getItem(\"accessToken\");\n        if (getAccessToken && getAccessToken.length > 0) {\n            navigate(\"/home\")\n        }\n    }, [])\n\n    /**\n     * Submit handler function\n     */\n    const handleSubmit = () => {\n        if (username.toLowerCase() === \"foo\" && password.toLowerCase() === \"bar\") {\n            const accessToken = Math.floor(Math.random() * 90000) + 10000;\n            localStorage.setItem(\"accessToken\", accessToken);\n            navigate(\"/home\");\n        }\n        else {\n            setError(true)\n        }\n    }\n\n    /**\n     * Handle username function\n     * @param {Object} event \n     */\n    const handleUsernameChange = (event) => {\n        const value = event.target.value;\n        setUsername(value)\n        setError(false)\n    }\n\n    /**\n     * Handle password function\n     * @param {Object} event \n     */\n    const handlePasswordChange = (event) => {\n        const value = event.target.value;\n        setPassword(value)\n        setError(false)\n    }\n\n    return (\n        <div className=\"loginWrapper\">\n            <div className=\"loginBox\">\n                Login\n            </div>\n            <div className=\"username\">\n                <label>Enter Username</label>\n                <input value={username} onChange={(e) => handleUsernameChange(e)}></input>\n            </div>\n            <div className=\"password\">\n                <label>Enter Password</label>\n                <input value={password} type=\"password\" onChange={(e) => handlePasswordChange(e)}></input>\n            </div>\n            <button className=\"submit\" onClick={() => handleSubmit()}>Submit</button>\n            {error && <div className=\"loginerror\">Please enter corrent username and password</div>}\n        </div>\n    )\n}\n\nexport default Login;\n","import \"../../styles/style.css\";\n/**\n * user functional component\n * @param {*} props \n * @returns \n */\nconst User = props => {\n    const { data } = props;\n    return (\n        <>\n            <img src={data.picture.large} alt={data.name.first} className=\"picture\"></img>\n            <div className=\"userName\">\n                {\n                    `${data.name.first} ${data.name.last}`\n                }\n            </div>\n        </>\n    )\n}\nexport default User;\n","import \"../../styles/style.css\";\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * Header functional component to \n * @returns HTML Element\n */\nfunction Header () {\n    const navigate = useNavigate();\n    const handleLogout = () => {\n        localStorage.removeItem(\"accessToken\");\n        navigate(\"/login\")\n    }\n    return (\n        <div className=\"logoutWrapper\">\n            <button className=\"logout\" onClick={() => handleLogout()}>\n                Logout\n            </button>\n        </div>\n    )\n}\n\nexport default Header;","import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport axios from \"axios\";\nimport User from \"../User/index\";\nimport Header from \"../Header/index\";\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * Home function component \n * @returns HTML element\n */\nconst Home = () => {\n    const [data, setuserData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [pagenumber, setPagenumber] = useState(0);\n    const observer = useRef();\n    const navigate = useNavigate();\n    const lastUserRef = useCallback(node => {\n        if (loading) return\n        if (observer.current) observer.current.disconnect()\n        observer.current = new IntersectionObserver(entries => {\n            if (entries[0].isIntersecting) {\n                setPagenumber(pagenumber + 1)\n            }\n        })\n        if (node) observer.current.observe(node)\n    }, [loading]);\n\n    useEffect(() => {\n        let cancel;\n        setLoading(true)\n        setTimeout(() => {\n            axios({\n                method: \"GET\",\n                url: `https://randomuser.me/api/?results=15&seed=abc&inc=gender,name,email,phone,cell,id,picture`,\n                cancelToken: new axios.CancelToken(c => cancel = c)\n            })\n                .then(res => {\n                    const currentdata = [...data, ...res.data.results]\n                    setuserData(currentdata);\n                    setLoading(false)\n                }\n                )\n                .catch(e => {\n                    if (axios.isCancel(e)) return\n                })\n            return () => cancel()\n        }, 1000)\n    }, [pagenumber])\n\n    useEffect(() => {\n        const getAccessToken = localStorage.getItem(\"accessToken\");\n        if (getAccessToken && getAccessToken.length > 0 ) {\n            setPagenumber(pagenumber+1);\n        }\n        else {\n            navigate(\"/login\")\n        }\n    }, []);\n\n    /**\n     * Render list function to dispaly list of users\n     * @returns HTML Element\n     */\n    const renderUserList = () => {\n        return (\n            <>\n                <div className=\"userDetail\">\n                    {\n                        data.map((elm, index) => {\n                            if (data.length === index + 1) {\n                                return (\n                                    <div ref={lastUserRef} key={index} className=\"user\">\n                                        <User data={elm}>\n                                        </User>\n                                    </div>\n\n                                )\n                            }\n                            else {\n                                return (\n                                    <div className=\"user\" key={index}>\n                                        <User data={elm}>\n                                        </User>\n                                    </div>\n                                )\n                            }\n                        })\n                    }\n                </div>\n                {\n                    loading && <div className=\"loading\">Loading...</div>\n                }\n            </>\n        )\n    }\n\n    if (data && data.length > 0) {\n        return (\n            <>\n            <Header></Header>\n            {renderUserList()}\n            </>\n        )\n    }\n\n    else {\n        return (\n        <>\n        <Header></Header>\n            <div className=\"loading\">Loading...</div>\n        </>\n        )\n    }\n}\n\nexport default Home;\n","import { Routes, BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Login from \"./component/Login/login\";\nimport Home from \"./component/Home/index\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Login/>}></Route>\n        <Route path=\"login\" element={<Login/>}></Route>\n        <Route path=\"home\" element={<Home/>}></Route>\n      </Routes>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}